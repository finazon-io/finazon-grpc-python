# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from finazon_grpc_python import benzinga_pb2 as finazon__grpc__python_dot_benzinga__pb2


class BenzingaServiceStub(object):
    """*
    BenzingaService provide access to Benzinga
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDividentsCalendar = channel.unary_unary(
                '/finazon.BenzingaService/GetDividentsCalendar',
                request_serializer=finazon__grpc__python_dot_benzinga__pb2.GetDividentsCalendarRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetDividentsCalendarResponse.FromString,
                )
        self.GetEarningsCalendar = channel.unary_unary(
                '/finazon.BenzingaService/GetEarningsCalendar',
                request_serializer=finazon__grpc__python_dot_benzinga__pb2.GetEarningsCalendarRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetEarningsCalendarResponse.FromString,
                )
        self.GetNews = channel.unary_unary(
                '/finazon.BenzingaService/GetNews',
                request_serializer=finazon__grpc__python_dot_benzinga__pb2.GetNewsRequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetNewsResponse.FromString,
                )
        self.GetIPO = channel.unary_unary(
                '/finazon.BenzingaService/GetIPO',
                request_serializer=finazon__grpc__python_dot_benzinga__pb2.GetIPORequest.SerializeToString,
                response_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetIPOResponse.FromString,
                )


class BenzingaServiceServicer(object):
    """*
    BenzingaService provide access to Benzinga
    """

    def GetDividentsCalendar(self, request, context):
        """Returns the dividends calendar from Benzinga
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEarningsCalendar(self, request, context):
        """Returns the earnings calendar from Benzinga
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNews(self, request, context):
        """Returns the news articles from Benzinga
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIPO(self, request, context):
        """Returns IPO data from Benzinga
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BenzingaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDividentsCalendar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDividentsCalendar,
                    request_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetDividentsCalendarRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_benzinga__pb2.GetDividentsCalendarResponse.SerializeToString,
            ),
            'GetEarningsCalendar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEarningsCalendar,
                    request_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetEarningsCalendarRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_benzinga__pb2.GetEarningsCalendarResponse.SerializeToString,
            ),
            'GetNews': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNews,
                    request_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetNewsRequest.FromString,
                    response_serializer=finazon__grpc__python_dot_benzinga__pb2.GetNewsResponse.SerializeToString,
            ),
            'GetIPO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIPO,
                    request_deserializer=finazon__grpc__python_dot_benzinga__pb2.GetIPORequest.FromString,
                    response_serializer=finazon__grpc__python_dot_benzinga__pb2.GetIPOResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'finazon.BenzingaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BenzingaService(object):
    """*
    BenzingaService provide access to Benzinga
    """

    @staticmethod
    def GetDividentsCalendar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.BenzingaService/GetDividentsCalendar',
            finazon__grpc__python_dot_benzinga__pb2.GetDividentsCalendarRequest.SerializeToString,
            finazon__grpc__python_dot_benzinga__pb2.GetDividentsCalendarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEarningsCalendar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.BenzingaService/GetEarningsCalendar',
            finazon__grpc__python_dot_benzinga__pb2.GetEarningsCalendarRequest.SerializeToString,
            finazon__grpc__python_dot_benzinga__pb2.GetEarningsCalendarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.BenzingaService/GetNews',
            finazon__grpc__python_dot_benzinga__pb2.GetNewsRequest.SerializeToString,
            finazon__grpc__python_dot_benzinga__pb2.GetNewsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIPO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/finazon.BenzingaService/GetIPO',
            finazon__grpc__python_dot_benzinga__pb2.GetIPORequest.SerializeToString,
            finazon__grpc__python_dot_benzinga__pb2.GetIPOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
