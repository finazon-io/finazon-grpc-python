"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GetDividentsCalendarRequest(google.protobuf.message.Message):
    """DividentsCalendar"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKER_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    START_AT_FIELD_NUMBER: builtins.int
    END_AT_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    CQS_FIELD_NUMBER: builtins.int
    CIK_FIELD_NUMBER: builtins.int
    CUSIP_FIELD_NUMBER: builtins.int
    ISIN_FIELD_NUMBER: builtins.int
    COMPOSITE_FIGI_FIELD_NUMBER: builtins.int
    SHARE_FIGI_FIELD_NUMBER: builtins.int
    LEI_FIELD_NUMBER: builtins.int
    ticker: builtins.str
    date: builtins.str
    start_at: builtins.int
    end_at: builtins.int
    page: builtins.int
    page_size: builtins.int
    order: builtins.str
    cqs: builtins.str
    cik: builtins.str
    cusip: builtins.str
    isin: builtins.str
    composite_figi: builtins.str
    share_figi: builtins.str
    lei: builtins.str
    def __init__(
        self,
        *,
        ticker: builtins.str = ...,
        date: builtins.str = ...,
        start_at: builtins.int = ...,
        end_at: builtins.int = ...,
        page: builtins.int = ...,
        page_size: builtins.int = ...,
        order: builtins.str = ...,
        cqs: builtins.str = ...,
        cik: builtins.str = ...,
        cusip: builtins.str = ...,
        isin: builtins.str = ...,
        composite_figi: builtins.str = ...,
        share_figi: builtins.str = ...,
        lei: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cik", b"cik", "composite_figi", b"composite_figi", "cqs", b"cqs", "cusip", b"cusip", "date", b"date", "end_at", b"end_at", "isin", b"isin", "lei", b"lei", "order", b"order", "page", b"page", "page_size", b"page_size", "share_figi", b"share_figi", "start_at", b"start_at", "ticker", b"ticker"]) -> None: ...

global___GetDividentsCalendarRequest = GetDividentsCalendarRequest

@typing_extensions.final
class GetDividentsCalendarResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DividentsCalendarItem]: ...
    def __init__(
        self,
        *,
        result: collections.abc.Iterable[global___DividentsCalendarItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["result", b"result"]) -> None: ...

global___GetDividentsCalendarResponse = GetDividentsCalendarResponse

@typing_extensions.final
class DividentsCalendarItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORD_ID_FIELD_NUMBER: builtins.int
    TICKER_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MIC_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    EX_DIVIDEND_DATE_FIELD_NUMBER: builtins.int
    DIVIDEND_TYPE_FIELD_NUMBER: builtins.int
    DIVIDEND_FIELD_NUMBER: builtins.int
    DIVIDEND_YIELD_FIELD_NUMBER: builtins.int
    DIVIDEND_PRIOR_FIELD_NUMBER: builtins.int
    DECLARATION_DATE_FIELD_NUMBER: builtins.int
    PAYABLE_DATE_FIELD_NUMBER: builtins.int
    RECORD_DATE_FIELD_NUMBER: builtins.int
    END_REGULAR_DIVIDEND_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    IMPORTANCE_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    UPDATED_FIELD_NUMBER: builtins.int
    record_id: builtins.str
    ticker: builtins.str
    name: builtins.str
    mic: builtins.str
    currency: builtins.str
    ex_dividend_date: builtins.str
    dividend_type: builtins.str
    dividend: builtins.float
    dividend_yield: builtins.float
    dividend_prior: builtins.str
    declaration_date: builtins.str
    payable_date: builtins.str
    record_date: builtins.str
    end_regular_dividend: builtins.bool
    frequency: builtins.int
    importance: builtins.int
    notes: builtins.str
    updated: builtins.int
    def __init__(
        self,
        *,
        record_id: builtins.str = ...,
        ticker: builtins.str = ...,
        name: builtins.str = ...,
        mic: builtins.str = ...,
        currency: builtins.str = ...,
        ex_dividend_date: builtins.str = ...,
        dividend_type: builtins.str = ...,
        dividend: builtins.float = ...,
        dividend_yield: builtins.float = ...,
        dividend_prior: builtins.str = ...,
        declaration_date: builtins.str = ...,
        payable_date: builtins.str = ...,
        record_date: builtins.str = ...,
        end_regular_dividend: builtins.bool = ...,
        frequency: builtins.int = ...,
        importance: builtins.int = ...,
        notes: builtins.str = ...,
        updated: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["currency", b"currency", "declaration_date", b"declaration_date", "dividend", b"dividend", "dividend_prior", b"dividend_prior", "dividend_type", b"dividend_type", "dividend_yield", b"dividend_yield", "end_regular_dividend", b"end_regular_dividend", "ex_dividend_date", b"ex_dividend_date", "frequency", b"frequency", "importance", b"importance", "mic", b"mic", "name", b"name", "notes", b"notes", "payable_date", b"payable_date", "record_date", b"record_date", "record_id", b"record_id", "ticker", b"ticker", "updated", b"updated"]) -> None: ...

global___DividentsCalendarItem = DividentsCalendarItem

@typing_extensions.final
class GetEarningsCalendarRequest(google.protobuf.message.Message):
    """EarningsCalendar"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKER_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    START_AT_FIELD_NUMBER: builtins.int
    END_AT_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    CQS_FIELD_NUMBER: builtins.int
    CIK_FIELD_NUMBER: builtins.int
    CUSIP_FIELD_NUMBER: builtins.int
    ISIN_FIELD_NUMBER: builtins.int
    COMPOSITE_FIGI_FIELD_NUMBER: builtins.int
    SHARE_FIGI_FIELD_NUMBER: builtins.int
    LEI_FIELD_NUMBER: builtins.int
    ticker: builtins.str
    date: builtins.str
    start_at: builtins.int
    end_at: builtins.int
    page: builtins.int
    page_size: builtins.int
    order: builtins.str
    cqs: builtins.str
    cik: builtins.str
    cusip: builtins.str
    isin: builtins.str
    composite_figi: builtins.str
    share_figi: builtins.str
    lei: builtins.str
    def __init__(
        self,
        *,
        ticker: builtins.str = ...,
        date: builtins.str = ...,
        start_at: builtins.int = ...,
        end_at: builtins.int = ...,
        page: builtins.int = ...,
        page_size: builtins.int = ...,
        order: builtins.str = ...,
        cqs: builtins.str = ...,
        cik: builtins.str = ...,
        cusip: builtins.str = ...,
        isin: builtins.str = ...,
        composite_figi: builtins.str = ...,
        share_figi: builtins.str = ...,
        lei: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cik", b"cik", "composite_figi", b"composite_figi", "cqs", b"cqs", "cusip", b"cusip", "date", b"date", "end_at", b"end_at", "isin", b"isin", "lei", b"lei", "order", b"order", "page", b"page", "page_size", b"page_size", "share_figi", b"share_figi", "start_at", b"start_at", "ticker", b"ticker"]) -> None: ...

global___GetEarningsCalendarRequest = GetEarningsCalendarRequest

@typing_extensions.final
class GetEarningsCalendarResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EarningsCalendarItem]: ...
    def __init__(
        self,
        *,
        result: collections.abc.Iterable[global___EarningsCalendarItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["result", b"result"]) -> None: ...

global___GetEarningsCalendarResponse = GetEarningsCalendarResponse

@typing_extensions.final
class EarningsCalendarItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Eps(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ESTIMATED_FIELD_NUMBER: builtins.int
        PRIOR_FIELD_NUMBER: builtins.int
        REPORTED_FIELD_NUMBER: builtins.int
        SURPRISE_FIELD_NUMBER: builtins.int
        SURPRISE_PERCENT_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        estimated: builtins.float
        prior: builtins.float
        reported: builtins.float
        surprise: builtins.float
        surprise_percent: builtins.float
        type: builtins.str
        def __init__(
            self,
            *,
            estimated: builtins.float = ...,
            prior: builtins.float = ...,
            reported: builtins.float = ...,
            surprise: builtins.float = ...,
            surprise_percent: builtins.float = ...,
            type: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["estimated", b"estimated", "prior", b"prior", "reported", b"reported", "surprise", b"surprise", "surprise_percent", b"surprise_percent", "type", b"type"]) -> None: ...

    @typing_extensions.final
    class Revenue(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ESTIMATED_FIELD_NUMBER: builtins.int
        PRIOR_FIELD_NUMBER: builtins.int
        REPORTED_FIELD_NUMBER: builtins.int
        SURPRISE_FIELD_NUMBER: builtins.int
        SURPRISE_PERCENT_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        estimated: builtins.float
        prior: builtins.float
        reported: builtins.float
        surprise: builtins.float
        surprise_percent: builtins.float
        type: builtins.str
        def __init__(
            self,
            *,
            estimated: builtins.float = ...,
            prior: builtins.float = ...,
            reported: builtins.float = ...,
            surprise: builtins.float = ...,
            surprise_percent: builtins.float = ...,
            type: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["estimated", b"estimated", "prior", b"prior", "reported", b"reported", "surprise", b"surprise", "surprise_percent", b"surprise_percent", "type", b"type"]) -> None: ...

    CURRENCY_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    DATE_CONFIRMED_FIELD_NUMBER: builtins.int
    EPS_FIELD_NUMBER: builtins.int
    IMPORTANCE_FIELD_NUMBER: builtins.int
    MIC_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    PERIOD_FIELD_NUMBER: builtins.int
    PERIOD_YEAR_FIELD_NUMBER: builtins.int
    RECORD_ID_FIELD_NUMBER: builtins.int
    REVENUE_FIELD_NUMBER: builtins.int
    TICKER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    UPDATED_FIELD_NUMBER: builtins.int
    currency: builtins.str
    date: builtins.str
    date_confirmed: builtins.bool
    @property
    def eps(self) -> global___EarningsCalendarItem.Eps: ...
    importance: builtins.int
    mic: builtins.str
    name: builtins.str
    notes: builtins.str
    period: builtins.str
    period_year: builtins.int
    record_id: builtins.str
    @property
    def revenue(self) -> global___EarningsCalendarItem.Revenue: ...
    ticker: builtins.str
    time: builtins.str
    updated: builtins.int
    def __init__(
        self,
        *,
        currency: builtins.str = ...,
        date: builtins.str = ...,
        date_confirmed: builtins.bool = ...,
        eps: global___EarningsCalendarItem.Eps | None = ...,
        importance: builtins.int = ...,
        mic: builtins.str = ...,
        name: builtins.str = ...,
        notes: builtins.str = ...,
        period: builtins.str = ...,
        period_year: builtins.int = ...,
        record_id: builtins.str = ...,
        revenue: global___EarningsCalendarItem.Revenue | None = ...,
        ticker: builtins.str = ...,
        time: builtins.str = ...,
        updated: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["eps", b"eps", "revenue", b"revenue"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["currency", b"currency", "date", b"date", "date_confirmed", b"date_confirmed", "eps", b"eps", "importance", b"importance", "mic", b"mic", "name", b"name", "notes", b"notes", "period", b"period", "period_year", b"period_year", "record_id", b"record_id", "revenue", b"revenue", "ticker", b"ticker", "time", b"time", "updated", b"updated"]) -> None: ...

global___EarningsCalendarItem = EarningsCalendarItem

@typing_extensions.final
class GetNewsRequest(google.protobuf.message.Message):
    """News"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKER_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    START_AT_FIELD_NUMBER: builtins.int
    END_AT_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    CQS_FIELD_NUMBER: builtins.int
    CIK_FIELD_NUMBER: builtins.int
    CUSIP_FIELD_NUMBER: builtins.int
    ISIN_FIELD_NUMBER: builtins.int
    COMPOSITE_FIGI_FIELD_NUMBER: builtins.int
    SHARE_FIGI_FIELD_NUMBER: builtins.int
    LEI_FIELD_NUMBER: builtins.int
    ticker: builtins.str
    date: builtins.str
    start_at: builtins.int
    end_at: builtins.int
    page: builtins.int
    page_size: builtins.int
    order: builtins.str
    cqs: builtins.str
    cik: builtins.str
    cusip: builtins.str
    isin: builtins.str
    composite_figi: builtins.str
    share_figi: builtins.str
    lei: builtins.str
    def __init__(
        self,
        *,
        ticker: builtins.str = ...,
        date: builtins.str = ...,
        start_at: builtins.int = ...,
        end_at: builtins.int = ...,
        page: builtins.int = ...,
        page_size: builtins.int = ...,
        order: builtins.str = ...,
        cqs: builtins.str = ...,
        cik: builtins.str = ...,
        cusip: builtins.str = ...,
        isin: builtins.str = ...,
        composite_figi: builtins.str = ...,
        share_figi: builtins.str = ...,
        lei: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cik", b"cik", "composite_figi", b"composite_figi", "cqs", b"cqs", "cusip", b"cusip", "date", b"date", "end_at", b"end_at", "isin", b"isin", "lei", b"lei", "order", b"order", "page", b"page", "page_size", b"page_size", "share_figi", b"share_figi", "start_at", b"start_at", "ticker", b"ticker"]) -> None: ...

global___GetNewsRequest = GetNewsRequest

@typing_extensions.final
class GetNewsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NewsItem]: ...
    def __init__(
        self,
        *,
        result: collections.abc.Iterable[global___NewsItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["result", b"result"]) -> None: ...

global___GetNewsResponse = GetNewsResponse

@typing_extensions.final
class NewsItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTHOR_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    IMAGES_FIELD_NUMBER: builtins.int
    RECORD_ID_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TICKERS_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    author: builtins.str
    @property
    def channels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    record_id: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def tickers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    title: builtins.str
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    url: builtins.str
    def __init__(
        self,
        *,
        author: builtins.str = ...,
        channels: collections.abc.Iterable[builtins.str] | None = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        images: collections.abc.Iterable[builtins.str] | None = ...,
        record_id: builtins.int = ...,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
        tickers: collections.abc.Iterable[builtins.str] | None = ...,
        title: builtins.str = ...,
        updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        url: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at", b"created_at", "updated_at", b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["author", b"author", "channels", b"channels", "created_at", b"created_at", "images", b"images", "record_id", b"record_id", "tags", b"tags", "tickers", b"tickers", "title", b"title", "updated_at", b"updated_at", "url", b"url"]) -> None: ...

global___NewsItem = NewsItem

@typing_extensions.final
class GetIPORequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_AT_FIELD_NUMBER: builtins.int
    END_AT_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    EXCHANGE_FIELD_NUMBER: builtins.int
    start_at: builtins.int
    end_at: builtins.int
    page: builtins.int
    page_size: builtins.int
    order: builtins.str
    exchange: builtins.str
    def __init__(
        self,
        *,
        start_at: builtins.int = ...,
        end_at: builtins.int = ...,
        page: builtins.int = ...,
        page_size: builtins.int = ...,
        order: builtins.str = ...,
        exchange: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_at", b"end_at", "exchange", b"exchange", "order", b"order", "page", b"page", "page_size", b"page_size", "start_at", b"start_at"]) -> None: ...

global___GetIPORequest = GetIPORequest

@typing_extensions.final
class GetIPOResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IPOS_FIELD_NUMBER: builtins.int
    @property
    def ipos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IPOItem]: ...
    def __init__(
        self,
        *,
        ipos: collections.abc.Iterable[global___IPOItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ipos", b"ipos"]) -> None: ...

global___GetIPOResponse = GetIPOResponse

@typing_extensions.final
class IPOItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECORD_ID_FIELD_NUMBER: builtins.int
    TICKER_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MIC_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    OPEN_DATE_VERIFIED_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    PRICE_MAX_FIELD_NUMBER: builtins.int
    PRICE_MIN_FIELD_NUMBER: builtins.int
    PRICE_OPEN_FIELD_NUMBER: builtins.int
    PRICE_PUBLIC_OFFERING_FIELD_NUMBER: builtins.int
    OFFERING_SHARES_FIELD_NUMBER: builtins.int
    OFFERING_SHARES_ORD_ADR_FIELD_NUMBER: builtins.int
    OFFERING_VALUE_FIELD_NUMBER: builtins.int
    ORD_SHARES_OUT_AFTER_OFFER_FIELD_NUMBER: builtins.int
    MARKET_CAP_AT_OFFER_FIELD_NUMBER: builtins.int
    DEAL_STATUS_FIELD_NUMBER: builtins.int
    INITIAL_FILING_DATE_FIELD_NUMBER: builtins.int
    INSIDER_LOCKUP_DATE_FIELD_NUMBER: builtins.int
    INSIDER_LOCKUP_DAYS_FIELD_NUMBER: builtins.int
    IPO_TYPE_FIELD_NUMBER: builtins.int
    LAST_YR_INCOME_FIELD_NUMBER: builtins.int
    LAST_YR_INCOME_YEAR_FIELD_NUMBER: builtins.int
    LAST_YR_REVENUE_FIELD_NUMBER: builtins.int
    LAST_YR_REVENUE_YEAR_FIELD_NUMBER: builtins.int
    LEAD_UNDERWRITERS_FIELD_NUMBER: builtins.int
    OTHER_UNDERWRITERS_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    PRICING_DATE_FIELD_NUMBER: builtins.int
    SEC_ACCESSION_NUMBER_FIELD_NUMBER: builtins.int
    SEC_FILING_URL_FIELD_NUMBER: builtins.int
    SHARES_OUTSTANDING_FIELD_NUMBER: builtins.int
    SIC_FIELD_NUMBER: builtins.int
    SPAC_CONVERTED_TO_TARGET_FIELD_NUMBER: builtins.int
    STATE_LOCATION_FIELD_NUMBER: builtins.int
    UNDERWRITER_QUIET_EXPIRATION_DATE_FIELD_NUMBER: builtins.int
    UNDERWRITER_QUIET_EXPIRATION_DAYS_FIELD_NUMBER: builtins.int
    UPDATED_FIELD_NUMBER: builtins.int
    record_id: builtins.str
    ticker: builtins.str
    name: builtins.str
    mic: builtins.str
    currency: builtins.str
    date: builtins.str
    open_date_verified: builtins.bool
    time: builtins.str
    price_max: builtins.float
    price_min: builtins.float
    price_open: builtins.float
    price_public_offering: builtins.float
    offering_shares: builtins.float
    offering_shares_ord_adr: builtins.float
    offering_value: builtins.float
    ord_shares_out_after_offer: builtins.float
    market_cap_at_offer: builtins.float
    deal_status: builtins.str
    initial_filing_date: builtins.str
    insider_lockup_date: builtins.str
    insider_lockup_days: builtins.int
    ipo_type: builtins.str
    last_yr_income: builtins.float
    last_yr_income_year: builtins.float
    last_yr_revenue: builtins.float
    last_yr_revenue_year: builtins.float
    @property
    def lead_underwriters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def other_underwriters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    notes: builtins.str
    pricing_date: builtins.str
    sec_accession_number: builtins.str
    sec_filing_url: builtins.str
    shares_outstanding: builtins.float
    sic: builtins.float
    spac_converted_to_target: builtins.bool
    state_location: builtins.str
    underwriter_quiet_expiration_date: builtins.str
    underwriter_quiet_expiration_days: builtins.int
    updated: builtins.int
    def __init__(
        self,
        *,
        record_id: builtins.str = ...,
        ticker: builtins.str = ...,
        name: builtins.str = ...,
        mic: builtins.str = ...,
        currency: builtins.str = ...,
        date: builtins.str = ...,
        open_date_verified: builtins.bool = ...,
        time: builtins.str = ...,
        price_max: builtins.float = ...,
        price_min: builtins.float = ...,
        price_open: builtins.float = ...,
        price_public_offering: builtins.float = ...,
        offering_shares: builtins.float = ...,
        offering_shares_ord_adr: builtins.float = ...,
        offering_value: builtins.float = ...,
        ord_shares_out_after_offer: builtins.float = ...,
        market_cap_at_offer: builtins.float = ...,
        deal_status: builtins.str = ...,
        initial_filing_date: builtins.str = ...,
        insider_lockup_date: builtins.str = ...,
        insider_lockup_days: builtins.int = ...,
        ipo_type: builtins.str = ...,
        last_yr_income: builtins.float = ...,
        last_yr_income_year: builtins.float = ...,
        last_yr_revenue: builtins.float = ...,
        last_yr_revenue_year: builtins.float = ...,
        lead_underwriters: collections.abc.Iterable[builtins.str] | None = ...,
        other_underwriters: collections.abc.Iterable[builtins.str] | None = ...,
        notes: builtins.str = ...,
        pricing_date: builtins.str = ...,
        sec_accession_number: builtins.str = ...,
        sec_filing_url: builtins.str = ...,
        shares_outstanding: builtins.float = ...,
        sic: builtins.float = ...,
        spac_converted_to_target: builtins.bool = ...,
        state_location: builtins.str = ...,
        underwriter_quiet_expiration_date: builtins.str = ...,
        underwriter_quiet_expiration_days: builtins.int = ...,
        updated: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["currency", b"currency", "date", b"date", "deal_status", b"deal_status", "initial_filing_date", b"initial_filing_date", "insider_lockup_date", b"insider_lockup_date", "insider_lockup_days", b"insider_lockup_days", "ipo_type", b"ipo_type", "last_yr_income", b"last_yr_income", "last_yr_income_year", b"last_yr_income_year", "last_yr_revenue", b"last_yr_revenue", "last_yr_revenue_year", b"last_yr_revenue_year", "lead_underwriters", b"lead_underwriters", "market_cap_at_offer", b"market_cap_at_offer", "mic", b"mic", "name", b"name", "notes", b"notes", "offering_shares", b"offering_shares", "offering_shares_ord_adr", b"offering_shares_ord_adr", "offering_value", b"offering_value", "open_date_verified", b"open_date_verified", "ord_shares_out_after_offer", b"ord_shares_out_after_offer", "other_underwriters", b"other_underwriters", "price_max", b"price_max", "price_min", b"price_min", "price_open", b"price_open", "price_public_offering", b"price_public_offering", "pricing_date", b"pricing_date", "record_id", b"record_id", "sec_accession_number", b"sec_accession_number", "sec_filing_url", b"sec_filing_url", "shares_outstanding", b"shares_outstanding", "sic", b"sic", "spac_converted_to_target", b"spac_converted_to_target", "state_location", b"state_location", "ticker", b"ticker", "time", b"time", "underwriter_quiet_expiration_date", b"underwriter_quiet_expiration_date", "underwriter_quiet_expiration_days", b"underwriter_quiet_expiration_days", "updated", b"updated"]) -> None: ...

global___IPOItem = IPOItem
